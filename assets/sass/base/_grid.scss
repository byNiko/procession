@use '../abstracts/' as *;

.container {
	max-width: 112.0rem;
	padding: 0 var(--gutter);

	.container {
		padding-left: 0;
		padding-right: 0;
	}
}

.container-fluid {
	padding: 0 var(--gutter);
}


.row {
	position: relative;


	@include bp(sm) {
		width: calc(100% + var(--gutter));
		margin-left: calc(-1 * var(--gutter)/2);

		.column {
			padding: 0 calc(var(--gutter) / 2)
		}
	}



	.column.column-100 {
		flex: 0 0 100%;
		max-width: 100%;
	}
}


.grid {
	display: grid;
}

.grid-2 {
	@include bp(sm) {
		grid-template-columns: 1fr 1fr;
		grid-gap: var(--gutter);
	}

}

.grid-3 {
	grid-gap: calc(var(--gutter));

	@include bp(sm) {
		grid-template-columns: 1fr 1fr;
	}

	@include bp(md) {
		grid-template-columns: 1fr 1fr 1fr;
	}
}

$widths: (
	10,
	15,
	20,
	25,
	33,
	40,
	50,
	60,
	66,
	75,
	85,
	100
);

@each $name in $widths {
	.w-#{$name} {
		@include bp(sm) {
			width: #{$name}#{"%"};
		}

		width: #{"100%"};
	}
}

.row .column.column-0.column-0 {
	flex: 0 !important;
}

.column.column-15 {
	flex: 0 0 15%;
	max-width: 15%;
}

.flex-wrap {
	flex-wrap: wrap;
}

.justify-center {
	justify-content: center;
}

.align-center {
	align-items: center;
}

.align-end {
	align-items: flex-end;
}

@include bp(sm, 'max-width') {
	.row .column[class*=" column-"] {
		max-width: none;
	}

}